@model LogOnViewModel
@{
    var returnUrl = ViewData.ContainsKey(Constants.ReturnUrlViewDataKey) ? (string)ViewData[Constants.ReturnUrlViewDataKey] : Request.RawUrl;
}

<div class="modal-dialog modal-box">
    <div class="modal-title">
        <span class="title-text">Sign-in assistance</span>
        <button type="button" class="dismiss-button" data-dismiss="modal" aria-label="Close">
            <i class="ms-Icon ms-Icon--Cancel" aria-hidden="true"></i>
        </button>
    </div>
    <div class="modal-body">
        <div class="tag-node">
            <span class="title-text">
                Forgot Microsoft account you used to sign-in?
            </span>
        </div>
        <div>
            @using (Html.BeginForm("Users", "PasswordAssistance"))
            {
                @Html.AntiForgeryToken()

                <div class="form-group text-label">
                    @Html.ShowLabelFor(m => m.PasswordAssistance.Username)
                    @Html.ShowTextBoxFor(m => m.PasswordAssistance.Username)
                    @Html.ShowValidationMessagesFor(m => m.PasswordAssistance.Username)
                </div>
                <div class="form-button-node">
                    <input type="submit" class="btn btn-primary btn-block action-button" value="Next">
                </div>            }
        </div>
    </div>
</div>
